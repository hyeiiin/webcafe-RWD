/* 한 줄 폭이 넓어짐
  height: 100vh;
  여러줄로 그라데이션
  background-image: linear-gradient(-45deg, red 30%, green 100%);
  한줄로만 나타나게 됨
  background-repeat: no-repeat; */
/* repeat은 이미지를 반복하지 않겠다는 의미 */
/* 글자가 떨어져 있는 이유는 agent style의 마진 때문에 위에 떨어져 보임 -> div 써주면 해결*/
/* @는 선언 표시 */
/* @keyframes moveEffect { from{} to{} } */
/* margin은 움직이는데 성공을 할 수 있겠지만 텍스트말고도 상자까지 움직임 -> padding, transform*/
body {
  height: 100vh;
  background: url(./../assets/bg_flower.png) no-repeat 50% 0,
    linear-gradient(to bottom, #aaa, #ccc, #eee, #fff) repeat 0 0;
  padding-top: 110px;
}

/* keyframe 선언 */
@keyframes moveEffect {
  0% {
    /* background: yellow; */
    /* margin: 0;
    padding: 0; */
    /* transform: translate(0,0); */
    top: 0;
    left: 0;
    /* 글자 점점 커지기 */
    font-size: 12px;
    /* 글자 투명도 점점 선명하게 */
    color: rgba(0, 0, 0, 0);
  }
  100% {
    /* background: pink; */
    /* padding: 75px 0 0 400px; */
    /* transform: translate(400px, 75px); */
    top: 75px;
    left: 400px;
    font-size: 24px;
    color: rgba(0, 0, 0, 1);
  }
}

@keyframes fadeEffect {
  0% {
    opacity: 1;
  }
  /* 50% {
    opacity: 0;
  } */
  100% {
    opacity: 0;
  }
}

.visual {
  /* 애니메이션 효과 - 필수 2개 */
  /* animation-name: moveEffect;
  animation-duration: 3s; */
  /* 애니메이션 효과를 유지 - 선택*/
  /* animation-fill-mode: forwards; */
  border: 1px solid green;
  width: 940px;
  height: 120px;
  /* 화면 가운데 정렬 */
  margin: 0 auto;
  position: relative;
  background: yellow;
  border-radius: 50px 0 50px 0;
  /* 배경 자연스럽게 */
  /* transition-property: background, border-radius; */
  /* 전이 효과 */
  /* transition-duration: 3s, 3s;
  transition-delay: 3s, 0s; */
  /* transition: background 3s 3s, border-radius 3s 0s; */
  transition: all 300ms ease-in-out;
}

.visual:hover {
  background: skyblue;
  border-radius: 0 50px 0 50px;
  border-width: 10px;
  border-style: dashed;
}

.is--active.visual {
  background: pink;
  border-radius: 0 50px 0 50px;
  border-width: 10px;
}

/* 공통 부분 */
.visual::before,
.visual::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  animation-name: fadeEffect;
  animation-duration: 2s;
  /* 몇 번 반복할 건 지 , infinite는 무한 반복 */
  animation-iteration-count: infinite;
  /* 방향을 조절하여 훨씬 자연스럽게 보임 alternate: 순방향 역방향 교차되는 의미 */
  animation-direction: alternate;
}

/* before가 인라인 레벨이기때문에 크기가 늘어날 수 없음 width,height 반영 안됨 -> display: block로 해결*/
.visual::before {
  background: url(./../assets/ani_flower_01.png) no-repeat 0px 0px,
    url(./../assets/ani_flower_02.png) no-repeat 800px 10px;
  /* 애니메이션이 멈춘 상태 - 과도한 애니메이션 동작 줄이기 */
  animation-play-state: paused;
  /* 겹치는 인덱스를 바꿀 때! 제일 위로 오고 싶어 할 때 -> z-index로 해결
  z-index: 10; */
}

.visual::after {
  background: url(./../assets/ani_flower_03.png) no-repeat 300px 15px,
    url(./../assets/ani_flower_04.png) no-repeat 670px 10px;
  /* 교차하는 느낌 */
  animation-delay: 1s;
}

.visual-text {
  /* 화면에 영역 칠하지 않음 */
  position: absolute;
  /* display: inline-block; */
  animation-name: moveEffect;
  animation-duration: 3s;
  animation-fill-mode: forwards;
}

/* 애프터는 마지막 자식 요소라  */

/* position: absolute;썼으면   display: block; 안써도 됨 */
/* 마크업한 순서대로 쌓임 before -> text -> after 로 쌓여서 after만 보임 before는 아래 깔림 */
/* 하지만 배경은 그 반대 먼저 한 게 위로 올라옴 */

/* animation-timing-function: 풍선,공이 일정하게만 튀면 지루하므로 애니메이션 시간 다르게 적용 */

/* 카드 뒤집기 */
/* 버튼 스타일 */
.flip-button {
  background: darkblue;
  color: white;
  border: 0;
  padding: 20px;
  border-radius: 10px;
  margin-top: 20px;
}

.card-wrapper {
  width: 750px;
  height: 400px;
  margin: 50px;
  /* 원근감 숫자가 작을수록 멀어져보임 */
  perspective: 600px;
}

.card {
  width: 100%;
  height: 100%;
  position: relative;
  /* 자식요소까지 입체감을 넣을지 말지 3차원으로 도는 회전  위에 원근감(perspective) 조건 알려줘야함 */
  transform-style: preserve-3d;
  /* 변형이 시작되는 기점 즉 가운데부터 오른쪽에서 맞춰서 돌아가라고 회전 */
  transform-origin: center right;
  /* 뒤집히는 중간 단계가 보여야 함 회전 되는 모습을 보여주기 위해 쓰임 */
  transition: transform 1s;
}
/* transform 혼자 쓰면 아무 의미 없음 애니메이션이랑 같이 써야함 */
.card.is--flipped {
  transform: translateX(-100%) rotateY(-180deg);
}

.card-face {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  /* 테두리 장식 */
  border: 2px solid black;
  /* 뒤집어진 뒷면 즉 반대 방향은 숨어보이게 */
  backface-visibility: hidden;
}

.card-face-black {
  background: url(./../images/likelion-black.png) no-repeat 0 0;
}

.card-face-white {
  background: url(./../images/likelion-white.png) no-repeat 0 0;
  /* 2개 레이어가 떠 있는데 같은 크기로 앞면을 바라보고 겹쳐있음 둘 중 하나는 일단 뒤집어 놔야함 그래야 앞면이 둘 다 보임 */
  transform: rotateY(180deg);
}
